{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Container/Container.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Container","children","className","style","container","Statistics","good","neutral","bad","total","positivePercentage","list","item","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","onClick","Section","title","Notification","message","App","state","addFeedback","setState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","Math","round","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,+ICU1CC,MARf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAMC,UAAtB,SAAkCH,K,gBCmB5BI,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qBAAIR,UAAWC,IAAMQ,KAArB,UACE,qBAAIT,UAAWC,IAAMS,KAArB,mBAAkCN,KAClC,qBAAIJ,UAAWC,IAAMS,KAArB,sBAAqCL,KACrC,qBAAIL,UAAWC,IAAMS,KAArB,kBAAiCJ,KACjC,qBAAIN,UAAWC,IAAMS,KAArB,oBAAmCH,KACnC,qBAAIP,UAAWC,IAAMS,KAArB,gCAA+CF,EAA/C,W,gBCYSG,MAnBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBACEC,KAAK,SACLhB,UAAWC,IAAMgB,OAEjBC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,GAHIA,OCQII,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOrB,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKqB,IACJrB,MCIQsB,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCsDEC,E,4MAjDbC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPmB,YAAc,SAAAV,GACZ,EAAKW,UAAS,SAAAF,GAAK,sBAChBT,EAASS,EAAMT,GAAU,O,EAI9BY,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAKhB,GAAN,OAAiBgB,EAAMhB,IAAQ,I,EAGzEiB,gCAAkC,WAAO,IAC/B5B,EAAS,EAAKoB,MAAdpB,KACR,OAAO6B,KAAKC,MAAO9B,EAAO,EAAKuB,qBAAwB,MAAQ,G,4CAGjE,WAAU,IAAD,EACwBQ,KAAKX,MAA5BpB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASc,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAASgB,OAAOQ,KAAKD,KAAKX,OAC1BX,gBAAiBsB,KAAKV,gBAG1B,cAAC,EAAD,CAASL,MAAM,aAAf,SACGe,KAAKR,qBACJ,cAAC,EAAD,CACEvB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,KAAKR,qBACZnB,mBAAoB2B,KAAKH,oCAG3B,cAAC,EAAD,CAAcV,QAAQ,+B,GA1ChBe,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B9C,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.a89ced0c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1l4QE\",\"item\":\"Statistics_item__1nJGQ\"};","import PropTypes from 'prop-types';\r\nimport style from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={style.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\nimport style from './Statistics.module.css';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul className={style.list}>\r\n      <li className={style.item}>Good: {good}</li>\r\n      <li className={style.item}>Neutral: {neutral}</li>\r\n      <li className={style.item}>Bad: {bad}</li>\r\n      <li className={style.item}>Total: {total}</li>\r\n      <li className={style.item}>Positive feedback: {positivePercentage}%</li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport style from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return options.map(option => (\r\n    <button\r\n      type=\"button\"\r\n      className={style.button}\r\n      key={option}\r\n      onClick={() => onLeaveFeedback(option)}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { Component } from 'react';\nimport Container from './components/Container/Container';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addFeedback = option => {\n    this.setState(state => ({\n      [option]: state[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, option) => acc + option, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round((good / this.countTotalFeedback()) * 100) || 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.addFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2ytq4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__26xkx\"};"],"sourceRoot":""}